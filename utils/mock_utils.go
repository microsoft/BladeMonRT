// Code generated by MockGen. DO NOT EDIT.
// Source: ./utils.go

// Package utils is a generated GoMock package.
package utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	store "github.com/microsoft/BladeMonRT/store"
)

// MockUtilsInterface is a mock of UtilsInterface interface.
type MockUtilsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUtilsInterfaceMockRecorder
}

// MockUtilsInterfaceMockRecorder is the mock recorder for MockUtilsInterface.
type MockUtilsInterfaceMockRecorder struct {
	mock *MockUtilsInterface
}

// NewMockUtilsInterface creates a new mock instance.
func NewMockUtilsInterface(ctrl *gomock.Controller) *MockUtilsInterface {
	mock := &MockUtilsInterface{ctrl: ctrl}
	mock.recorder = &MockUtilsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtilsInterface) EXPECT() *MockUtilsInterfaceMockRecorder {
	return m.recorder
}

// GetEventRecordIdBookmark mocks base method.
func (m *MockUtilsInterface) GetEventRecordIdBookmark(bookmarkStore store.PersistentKeyValueStoreInterface, query string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventRecordIdBookmark", bookmarkStore, query)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetEventRecordIdBookmark indicates an expected call of GetEventRecordIdBookmark.
func (mr *MockUtilsInterfaceMockRecorder) GetEventRecordIdBookmark(bookmarkStore, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventRecordIdBookmark", reflect.TypeOf((*MockUtilsInterface)(nil).GetEventRecordIdBookmark), bookmarkStore, query)
}

// ParseEventXML mocks base method.
func (m *MockUtilsInterface) ParseEventXML(eventXML string) EtwEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseEventXML", eventXML)
	ret0, _ := ret[0].(EtwEvent)
	return ret0
}

// ParseEventXML indicates an expected call of ParseEventXML.
func (mr *MockUtilsInterfaceMockRecorder) ParseEventXML(eventXML interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseEventXML", reflect.TypeOf((*MockUtilsInterface)(nil).ParseEventXML), eventXML)
}
